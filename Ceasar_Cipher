package caesar_cipher;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.font.*;
import javax.swing.JLabel.*;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class C_Cipher extends JFrame implements ActionListener{
	
	JLabel Label1 = new JLabel(" Welcome to Ceasar Cipher Cryptography V.1.0");
	JLabel Label2 = new JLabel("Input Word :");
	JLabel Label3 = new JLabel("Output Word :");
	JLabel Label4 = new JLabel(" Shift size :");
	
	
	//Dil Seçimi !!
	JRadioButton En = new JRadioButton("English");
	JRadioButton Tr = new JRadioButton("Turkish");
	JRadioButton Gr = new JRadioButton("German");
	
	
	ButtonGroup ButtonGroup = new ButtonGroup();
	
	
	//Giren ve çıkan verilen yeri !!!
	
	JTextField Input = new JTextField(40);
	JTextField Output = new JTextField(40);
	JTextField Shift = new JTextField(7);
	
	//Buton kısmı !!
	
	JButton Encrypt = new JButton("Encrypt");
	JButton Decrypt = new JButton("Decrypt");
	JButton Clear = new JButton("Clear");
	
	//Oluşturulan GUI İtemlerini düzenleyen kısım !!
	
	JPanel Panel1 = new JPanel();
	JPanel Panel2 = new JPanel();
	JPanel Panel3 = new JPanel();
	JPanel Panel4 = new JPanel();
	JPanel Panel5 = new JPanel();
	
	
	//Ceaser Cipher Main Components for Action Performed Side
	//** Alphabet ** 3 Different Language **
	
	String TRalpha = "abcçdefghıijklmnoöprsştuüvyz";
	String GRalpha = "abcdefghijklmnopqrstuvwxyzüöäß";
	String ENalpha = "abcdefghijklmnopqrstuvwxyz";
	
	
	
	
	
	//int ShiftNumber ;  //Kaydırma Sayısı
	
	
	
	public static void main(String[] args) {
		
		C_Cipher Cipher = new C_Cipher();
	}
	
	
	
	public C_Cipher(){
		
		//init();
		
		setLayout(new FlowLayout());
		setSize(600, 360);
		
		setTitle("Ceaser Cipher V.1");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		setVisible(true);
		
		//Yeni eklenti window için *******************
		this.setResizable(false);
		
		Panel1.add(Label1);
		add(Panel1);
		Label1.setFont(new Font("Verdana", Font.BOLD, 16));
		
		
		
		//** Button group for languages **
		this.ButtonGroup.add(En);
		this.ButtonGroup.add(Tr);
		this.ButtonGroup.add(Gr);
		
		// Otomatik İngilizce dil seçimi yapıldı **************
		En.setSelected(true);
		
		Panel2.add(En);
		Panel2.add(Tr);
		Panel2.add(Gr);
		Panel2.add(Label4);
		Panel2.add(Shift);
		Shift.addActionListener(this);
		add(Panel2);
		
		En.addActionListener(this);
		Tr.addActionListener(this);
		Gr.addActionListener(this);
		
		//Dil seçimi kısıtlama getirildi ***********
		Tr.setEnabled(false);
		Gr.setEnabled(false);
		
		
		//** Text Field area for appear on window **
		Panel3.add(Label2);
		Panel3.add(Input);
		add(Panel3);
		Input.addActionListener(this);
		
		Panel4.add(Label3);
		Panel4.add(Output);
		
		//Output textfield kısmına bir şey yazılması engellendi ***********
		Output.setEditable(false);
		
		add(Panel4);
		Output.addActionListener(this);
	

		
		//** Buttons Place **
		Panel4.add(Encrypt);
		Panel4.add(Decrypt);
		Panel4.add(Clear);
		add(Panel4);
		
		Encrypt.addActionListener(this);
		this.add(Encrypt);
		
		Decrypt.addActionListener(this);
		this.add(Decrypt);
		
		Clear.addActionListener(this);
		this.add(Clear);
	}
		
	private void init() {
		
		//adding uppercase letters to dictionary ********
		ENalpha += (ENalpha.toUpperCase());

		System.out.println(ENalpha);		
	}

	
	public void actionPerformed(ActionEvent e) {
		
		// BÜTÜN OLAY BURADA DÖNÜYOR !!ß
		//Tanımlamalar ve ayarlar
		
		int i, Extend, j;      //For döngüsü için !!  // Extend (Input2'nin uzunluğu //** J ** değeri alfabenin bütün değişkenlerini kullanmak için. 
		String Cipher ="";   //Alınacak verinin tutulması için.
		
		String Input2 ="";   //Income
		String Output2 ="";   //Outcome
		
		int ShiftNumber;
		
		
		//Ayrı bir section kullanılmaması için TRY & CATCH kullanıldı ki String çakışma sorunu çözüldü + clear button düzeldi
		try {
			
			ShiftNumber = Integer.parseInt(Shift.getText());	
		}
		
		catch(Exception exception){
			
			ShiftNumber = 0;
			JOptionPane.showMessageDialog(null, "Please enter shift value!");
			System.out.println(exception);	
		}
		
		
		//JTextField temizlenmesi için. 
		
		if(e.getSource() == Clear) 
		{
			Input.setText("");
			Output.setText(""); 
			return;
		}
		
		//Sadece İngilizce button seçili olduğu ve şifreleme yapılacağı zaman !!
		if(e.getSource() == Encrypt && En.isSelected()) {
			
			String dictionary = "";
			if(En.isSelected() == true) {
				dictionary = ENalpha;
			}
			else if (Gr.isSelected() == true) {
				dictionary = GRalpha;
			}
			else if(Tr.isSelected() == true){
				dictionary = TRalpha;
			}
			
			Input2 = Input.getText();
			
			Extend = Input2.length();
			int dictionaryLength = dictionary.length();
			
			for(i=0; i<Extend; i++) {
				
				for(j=0; j<dictionaryLength; j++) {
				
					if(Input2.charAt(i) == dictionary.charAt(j)) {
						
						Output2 += dictionary.charAt((j+ShiftNumber) % dictionaryLength);
					}
				}
			}
			
			Output.setText(Output2);
			
		}
		
		if(e.getSource() == Decrypt && En.isSelected()) {
			
			String dictionary = "";
			if(En.isSelected() == true) {
				dictionary = ENalpha;
			}else if (Gr.isSelected() == true) {
				dictionary = GRalpha;
			}else if(Tr.isSelected() == true){
				dictionary = TRalpha;
			}
			
			Input2 = Input.getText();
			
			Extend = Input2.length();
			
			int dictionaryLength = dictionary.length();
			for(i=0; i<Extend; i++) {
				
				for(j=0; j<dictionaryLength; j++) {
				
					if(Input2.charAt(i) == dictionary.charAt(j)) {
						
						Output2 += dictionary.charAt((j-ShiftNumber)%dictionaryLength);
					}
				}
			}
			
			Output.setText(Output2);
			
		}
	
		
	}
}
